---
- name: Azure AD Automation using Ansible
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    graph_api_url: "https://graph.microsoft.com/v1.0"
    tenant_id: "{{ azure_tenant_id }}"
    client_id: "{{ azure_client_id }}"
    client_secret: "{{ azure_client_secret }}"
    user_principal_name: "Jayanta.Banerjee@amitomar63gmail.onmicrosoft.com"
    new_user_principal_name: "newuser1@amitomar63gmail.onmicrosoft.com"
    new_user_display_name: "Akhilsandeep3"
    new_user_mail_nickname: "AS3"
    temp_password: "TempPass@123"

  tasks:
    - name: Get Access Token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: token_response
      failed_when: token_response.status != 200

    - name: Set Access Token Fact
      set_fact:
        access_token: "{{ token_response.json.access_token }}"
      when: token_response.status == 200

    - name: Check for User
      uri:
        url: "{{ graph_api_url }}/users/{{ user_principal_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
      register: user_check
      failed_when: user_check.status not in [200, 404]

    - name: Create User if Not Exists
      uri:
        url: "{{ graph_api_url }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "{{ new_user_display_name }}"
          mailNickname: "{{ new_user_mail_nickname }}"
          userPrincipalName: "{{ new_user_principal_name }}"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "{{ temp_password }}"
        body_format: json
      register: user_creation
      when: user_check.status == 404

    - name: Enable User Account
      uri:
        url: "{{ graph_api_url }}/users/{{ user_principal_name }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
        body_format: json
      register: user_enable
      when: user_check.status == 200 and not user_check.json.accountEnabled

    - name: Disable User Account
      uri:
        url: "{{ graph_api_url }}/users/{{ user_principal_name }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: false
        body_format: json
      register: user_disable
      when: user_check.status == 200 and user_check.json.accountEnabled
